'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stringify = exports.urlParam2Map = exports.clone = exports.md5 = exports.sha1 = exports.sha256 = exports.base64encode = exports.base64decode = exports.sortObject = exports.uuidV4 = exports.uuid = exports.queryAll = exports.query = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _nodeUuid = require('node-uuid');

var _nodeUuid2 = _interopRequireDefault(_nodeUuid);

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var query = function query(sel) {
    return document.querySelector(sel);
};

var queryAll = function queryAll(sel) {
    return document.querySelectorAll(sel);
};

var uuid = function uuid() {
    return _nodeUuid2.default.v1();
};

var uuidV4 = function uuidV4() {
    return _nodeUuid2.default.v4();
};

var hash = function hash(method, s, format) {
    var sum = _crypto2.default.createHash(method);
    var isBuffer = Buffer.isBuffer(s);
    if (!isBuffer && (typeof s === 'undefined' ? 'undefined' : (0, _typeof3.default)(s)) === 'object') {
        s = (0, _stringify2.default)(sortObject(s));
    }
    sum.update(s, isBuffer ? 'binary' : 'utf8');
    return sum.digest(format || 'hex');
};

var md5 = function md5(s, format) {
    return hash('md5', s, format);
};

var sha1 = function sha1(s, format) {
    return hash('sha1', s, format);
};

var sha256 = function sha256(s, format) {
    return hash('sha256', s, format);
};

var base64encode = function base64encode(s) {
    if (!Buffer.isBuffer(s)) {
        s = new Buffer(s);
    }
    var encode = s.toString('base64');
    var urlsafe = false;
    if (urlsafe) {
        encode = encode.replace(/\+/g, '-').replace(/\//g, '_');
    }
    return encode;
};

var base64decode = function base64decode(encodeStr, encoding) {
    var urlsafe = false;
    if (urlsafe) {
        encodeStr = encodeStr.replace(/\-/g, '+').replace(/_/g, '/');
    }
    var buf = new Buffer(encodeStr, 'base64');
    if (encoding === 'buffer') {
        return buf;
    }
    return buf.toString(encoding || 'utf8');
};

var sortObject = function sortObject(o) {
    if (!o || Array.isArray(o) || (typeof o === 'undefined' ? 'undefined' : (0, _typeof3.default)(o)) !== 'object') {
        return o;
    }
    var keys = (0, _keys2.default)(o);
    keys.sort();
    var values = [];
    for (var i = 0; i < keys.length; i++) {
        var k = keys[i];
        values.push([k, sortObject(o[k])]);
    }
    return values;
};

var clone = function clone(obj) {
    var o = void 0;
    switch (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) {
        case 'undefined':
            break;
        case 'string':
            o = obj + '';
            break;
        case 'number':
            o = obj - 0;
            break;
        case 'boolean':
            o = obj;
            break;
        case 'object':
            if (obj === null) {
                o = null;
            } else {
                if (obj instanceof Array) {
                    o = [];
                    for (var i = 0, len = obj.length; i < len; i++) {
                        o.push(clone(obj[i]));
                    }
                } else {
                    o = {};
                    for (var k in obj) {
                        o[k] = clone(obj[k]);
                    }
                }
            }
            break;
        default:
            o = obj;
            break;
    }
    return o;
};

var urlParam2Map = function urlParam2Map(url) {
    var param = {};
    var k = void 0,
        v = void 0;
    url = decodeURIComponent(url);
    if (url.indexOf('?') !== -1) {
        url = url.split('?')[1];
    }
    url.split('&').map(function (item) {
        k = item.split('=')[0];
        v = item.split('=')[1];
        param[k] = v;
    });
    return param;
};

var stringify = function stringify(obj) {
    return _util2.default.inspect(obj);
};

exports.query = query;
exports.queryAll = queryAll;
exports.uuid = uuid;
exports.uuidV4 = uuidV4;
exports.sortObject = sortObject;
exports.base64decode = base64decode;
exports.base64encode = base64encode;
exports.sha256 = sha256;
exports.sha1 = sha1;
exports.md5 = md5;
exports.clone = clone;
exports.urlParam2Map = urlParam2Map;
exports.stringify = stringify;
exports.default = {
    query: query,
    queryAll: queryAll,
    uuid: uuid,
    uuidV4: uuidV4,
    sortObject: sortObject,
    base64decode: base64decode,
    base64encode: base64encode,
    sha256: sha256,
    sha1: sha1,
    md5: md5,
    clone: clone,
    urlParam2Map: urlParam2Map,
    stringify: stringify
};