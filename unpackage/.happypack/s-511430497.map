{"version":3,"sources":["src\\common\\muiUtils.js"],"names":[],"mappings":"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","file":"muiUtils.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/jxddH5PlusApp/unpackage","sourcesContent":["'use strict';\n/*!\n * muiUitls.js v1.0.0\n * 基于mui进行封装的工具类<br>\n *\n * Author: liaoxm\n * Date: 2016-06-16\n * 使用方法：\n *        import muiUitls from 'muiUitls.js'\n *        muiUitls.openWindow(url,id,opts)\n */\nimport merge from 'webpack-merge';\nimport logger from './logUtils';\nimport propUtils from './propUtils';\nimport utils from './utils';\nimport cacheUtils from './cacheUtils';\nimport pageUrl from 'api';\nimport CONSTS from './consts';\nimport { delAllFile } from './image-utils';\n\n\r\n/**\n * 打开新窗口\n * @param {string} url 要打开的页面地址\n * @param {string} id 指定页面ID\n * @param {object} options 可选:参数,等待,窗口,显示配置{params:{},waiting:{},styles:{},show:{},isValidLogin,isClose}\n * 通过isValidLogin来确定是否做登录验证，true|false，默认false\n * 通过isClose来确定是否需要关闭当前webview，默认false\n * 默认是从右边划出，动画时间是500ms\n * @public\n */\nconst openWindow = (url, id, options) => {\n    if (unsafeTap()) {\n        return false;\n    }\n  // 判断网络情况，无网直接跳网络异常页面\n  //  if (getNetworkType() === 1) {\n  //      forwordError();\n  //      return false;\n  //  }\n    id = id || url;\n    options = options || {};\n\n    if (typeof id === 'object') {\n        options = id;\n        id = url;\n    }\n  // 处理默认值\n    options = merge({\n        styles: {\r\n            popGesture: 'close',\r\n            softinputMode: 'adjustResize'\r\n        },\n        show: {\n            autoShow: true,\n            aniShow: 'pop-in',\n            duration: 300\n        },\n        waiting: {\n            autoShow: false // 自动显示等待框，默认为true\n        },\n        createNew: false\n    }, options || {});\n\n    let blacklist = propUtils.getProperty('webview.id.blacklist', 'urlprops');\n    if (!blacklist.some(item => item === id)) {\n        cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).setObject(CONSTS.LOGIN_FORWORD, {\r\n            url: url,\n            id: id,\n            options: options || {}\n        });\n        logger.log('缓存的url:' + url);\n    }\n\n  // 是否需要验证登录\n    if (options.isValidLogin === true) {\n        if (loginValid() === false) {\n            return false;\n        }\n    }\n    //强制将要离开的界面关闭键盘(ios7.0 bug)\n    hideKeyBord();\n    setStatusStyleForPageId(id);\r\n    let gotoPage = plus.webview.getWebviewById(id);\r\n    let pagelist = propUtils.getProperty('webview.preload.whiltlist', 'urlprops');\r\n    if (gotoPage && !options.createNew) {\r\n        if (pagelist.some(item => item === id)) {\r\n            mui.fire(gotoPage, CONSTS.WEBVIEW_SHOW_EVENT, options.extras);\r\n        }\r\n        gotoPage.hide(); // 只有先hide再show才能出动画\r\n        gotoPage.show(options.show.aniShow, options.show.duration);\r\n    } else {\r\n        gotoPage = mui.openWindow(url, id, options);\r\n        if (!pagelist.some(item => item === id)) {\r\n            controlOpenPage(id);\r\n        }\r\n    }\r\n  // 延迟一秒关闭当前webview\r\n    if (options.isClose === true) {\r\n        setTimeout(function() {\r\n      // 去掉关闭动画\r\n            closWebview();\r\n        }, 1100);\r\n    }\r\n    setTimeout(function() {\r\n        popGestureEvent(gotoPage);\r\n    }, 300);\r\n    return gotoPage;\n};\r\n\r\n/**\r\n * 根据内存状态设置状态栏样式，非主页页面使用\r\n */\r\nconst setStatusStyle = () => {\r\n    if (!plus) {\r\n        return;\r\n    }\r\n    if (window.localStorage.getItem('openwindow_seller_index') === '0') {\n        plus.navigator.setStatusBarBackground('#419fdc');\n    } else {\n        plus.navigator.setStatusBarBackground('#f04e30');\n    }\n    plus.navigator.setStatusBarStyle('UIStatusBarStyleBlackOpaque');\n};\r\n\r\n/**\r\n * 根据页面id设置状态栏样式，只有两个主页需要关注\r\n * @param {[type]} id [description]\r\n */\r\nconst setStatusStyleForPageId = id => {\r\n    if (!plus) {\r\n        return;\r\n    }\r\n    if (id === 'main') {\r\n    // plus.navigator.setStatusBarBackground('#f04e30');\r\n    // plus.navigator.setStatusBarStyle('UIStatusBarStyleBlackOpaque');\r\n        window.localStorage.setItem('openwindow_seller_index', '1');\r\n    } else if (id === 'seller_index') {\r\n    // plus.navigator.setStatusBarBackground('#419fdc');\r\n    // plus.navigator.setStatusBarStyle('UIStatusBarStyleBlackOpaque');\r\n        window.localStorage.setItem('openwindow_seller_index', '0');\r\n    }\r\n    setStatusStyle();\r\n};\r\n\n/**\r\n * 控制连续点击多次打开窗口\r\n * 目前的开窗口动画300，在这个时间内多次点击会打开多个webview，所以将时间设置成500，保证手速再快也只能响应一次\r\n * @type {[type]}\r\n */\r\nvar tapFirst = null;\nconst unsafeTap = () => {\n    if (!tapFirst) {\n        tapFirst = new Date().getTime();\n        setTimeout(function() {\n            tapFirst = null;\n        }, 500);\r\n    } else {\n        return true;\n    }\n};\n\r\n/**\r\n * 监听侧滑事件\r\n * @type {[type]}\r\n */\n/* eslint-disable no-unused-vars*/\nconst popGestureEvent = gotoPage => {\r\n    let sbb = null;\r\n    let sbs = null;\r\n    gotoPage.addEventListener('popGesture', function(e) {\r\n        sbb = sbb || plus.navigator.getStatusBarBackground();\r\n        sbs = sbs || plus.navigator.getStatusBarStyle();\r\n        if (e.type === 'end') {\r\n            if (e.result === false) {\r\n        // 侧滑取消，还原状态栏样式\r\n                plus.navigator.setStatusBarBackground(sbb);\r\n                plus.navigator.setStatusBarStyle(sbs);\r\n            }\r\n        }\r\n        if (e.type === 'move' && e.progress > 55) {\r\n            let id = plus.webview.currentWebview().id;\r\n            if (id === 'main') {\r\n                setStatusStyleForPageId('main');\r\n            }\r\n        }\r\n    }, false);\r\n};\r\n\r\n/**\r\n * 控制新开页面数量，最大开20个页面，不包括预加载的页面，超过20个就砍掉最开始的第一个\r\n * @param  {String} id 新开页面的id\r\n * @return {void}\r\n */\r\nconst controlOpenPage = id => {\r\n    let maxNum = propUtils.getProperty('open_page_num', 'UIprops');\r\n    let allView = plus.webview.all();\r\n    let pagelist = propUtils.getProperty('webview.preload.whiltlist', 'urlprops');\r\n    allView = allView.filter(item => !pagelist.some(id => id === item.id));\r\n    if (allView.length > maxNum) {\r\n        logger.log(maxNum + 'openPage is max:' + allView.length, 'controlOpenPage()');\r\n        setTimeout(function() {\r\n            allView.splice(0, 1).map(id => {\r\n                plus.webview.close(id, 'none');\r\n            });\r\n        }, 1000);\r\n    }\r\n};\r\n\r\n/**\r\n * 关闭新开的页面，除了预加载的页面\r\n * @return {[type]} [description]\r\n */\r\nconst closeAllOpenPage = () => {\r\n    let allView = plus.webview.all();\r\n    let pagelist = propUtils.getProperty('webview.preload.whiltlist', 'urlprops');\r\n    allView = allView.filter(item => !pagelist.some(id => id === item.id));\r\n    logger.log('closeAllOpenPage is max:' + allView.length, 'closeAllOpenPage()');\r\n    setTimeout(function() {\r\n        allView.map(id => {\r\n            plus.webview.close(id, 'none');\r\n        });\r\n    }, 1000);\r\n};\r\n\r\n/**\r\n * 登录跳转打开上一次打开的窗口，需要刷新webview\r\n * 默认是从右边划出，动画时间是500ms\r\n * @param {object} options 可选:参数,等待,窗口,显示配置{params:{},waiting:{},styles:{},show:{}}\r\n * @public\r\n */\r\nconst openPreWindow = (options) => {\r\n  // 缓存读取id。通过id来开页面，如果没有就跳首页\r\n    let o = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).getObject(CONSTS.LOGIN_FORWORD) || pageUrl.PAGE_URL.buyer_index;\r\n    options = options || {};\r\n  // 处理默认值\r\n    options = merge(o.options || {}, options || {});\r\n    options = merge({\r\n        styles: {\r\n            popGesture: 'close'\r\n        },\r\n        show: {\r\n            autoShow: true,\r\n            aniShow: 'pop-in',\r\n            duration: 300\r\n        },\r\n        waiting: {\r\n            autoShow: false // 自动显示等待框，默认为true\r\n        }\r\n    }, options || {});\r\n  //  options.createNew = true;//重复新开一个webview，解决刷新数据刷新问题\r\n    let login = true;\n    let gotoPage = plus.webview.getWebviewById(o.id);\r\n    if (o.id === pageUrl.PAGE_URL.buyer_index.id) {\r\n        let accessToken = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.LOGIN_ACCESS_TOKEN);\r\n        if (accessToken === undefined || accessToken == null || accessToken === '' || accessToken === 'null') {\r\n            login = false;\r\n        }\n        if (options.openIndex !== undefined) {\n            mui.fire(gotoPage, 'home_nav', {\n                index: options.openIndex\n            });\n        }\n        setTimeout(() => {\n            gotoPage.hide();\n            gotoPage.show(options.show.aniShow, options.show.duration);\n        }, 300);\r\n        if (login === false) {\r\n            mui.fire(plus.webview.getWebviewById(o.id), CONSTS.LOGIN_OUT_EVENT, {});\r\n            return;\r\n        }\n        mui.fire(gotoPage, CONSTS.LOGIN_COMPUTER_EVENT, {});\n        setTimeout(function() {\n            closWebview();\n        }, 1000);\n    } else if (gotoPage) {\n    // 纯按钮操作，不涉及页面, 必须将去向页面show处理，中间有几个页面，仅仅关闭当前页面是不够的\r\n        mui.fire(gotoPage, CONSTS.LOGIN_COMPUTER_EVENT, {});\r\n        setTimeout(() => {\r\n            gotoPage.hide();\n            gotoPage.show(options.show.aniShow, options.show.duration);\r\n        }, 300);\r\n        setTimeout(() => {\r\n            plus.webview.currentWebview().close('none');\r\n        }, 1000);\r\n    } else {\n    // 跳转到目标页面\n        mui.openWindow(o.url, o.id, options);\n        setTimeout(function() {\n            plus.webview.currentWebview().close('none');\n        }, 500);\n    }\n};\r\n\r\n/**\r\n * 打开首页\r\n * @param {string} type 打开的首页类型\r\n * buyer(买家首页) seller(卖家首页)\r\n * @public\r\n */\r\nconst openIndexWindow = (type, options) => {\r\n    options = options || {};\r\n    let openIndex = options.openIndex || 0;\r\n    mui.fire(plus.webview.getWebviewById(pageUrl.PAGE_URL.buyer_index.id), 'home_nav', {\r\n        index: openIndex\r\n    });\r\n    let id = pageUrl.PAGE_URL.buyer_index.id;\r\n    let url = pageUrl.PAGE_URL.buyer_index.url;\r\n    if (type === 'seller') {\r\n        id = pageUrl.PAGE_URL.seller_index.id;\r\n        url = pageUrl.PAGE_URL.seller_index.url;\r\n    }\r\n  // openWindow(url, id);\r\n    setTimeout(function() {\r\n        openWindow(url, id, options);\r\n    }, 300);\r\n};\r\n\r\nconst closWebview = () => {\r\n    if (plus.webview.currentWebview().id !== 'main') {\r\n        plus.webview.currentWebview().close('none');\r\n    }\r\n};\r\n\r\n/**\r\n * 手机网络状态\r\n * CONNECTION_UNKNOW: 网络连接状态未知  0\r\n * CONNECTION_NONE: 未连接网络 1\r\n * CONNECTION_ETHERNET: 有线网络 2\r\n * CONNECTION_WIFI: 无线WIFI网络 3\r\n * CONNECTION_CELL2G: 蜂窝移动2G网络 4\r\n * CONNECTION_CELL3G: 蜂窝移动3G网络 5\r\n * CONNECTION_CELL4G: 蜂窝移动4G网络 6\r\n * @return { Number} 连接状态数值\r\n * @public\r\n */\r\nconst getNetworkType = () => {\r\n    let types = {};\r\n    types[plus.networkinfo.CONNECTION_UNKNOW] = 'Unknown connection';\r\n    types[plus.networkinfo.CONNECTION_NONE] = 'None connection';\r\n    types[plus.networkinfo.CONNECTION_ETHERNET] = 'Ethernet connection';\r\n    types[plus.networkinfo.CONNECTION_WIFI] = 'WiFi connection';\r\n    types[plus.networkinfo.CONNECTION_CELL2G] = 'Cellular 2G connection';\r\n    types[plus.networkinfo.CONNECTION_CELL3G] = 'Cellular 3G connection';\r\n    types[plus.networkinfo.CONNECTION_CELL4G] = 'Cellular 4G connection';\r\n    logger.log('networkinfo:' + plus.networkinfo.getCurrentType(), 'getNetworkType()');\r\n    return plus.networkinfo.getCurrentType();\r\n};\r\n\r\n/**\r\n * 手机网络状态\r\n * CONNECTION_UNKNOW: 网络连接状态未知  0\r\n * CONNECTION_NONE: 未连接网络 1\r\n * CONNECTION_ETHERNET: 有线网络 2\r\n * CONNECTION_WIFI: 无线WIFI网络 3\r\n * CONNECTION_CELL2G: 蜂窝移动2G网络 4\r\n * CONNECTION_CELL3G: 蜂窝移动3G网络 5\r\n * CONNECTION_CELL4G: 蜂窝移动4G网络 6\r\n * @return { Number} 连接状态数值\r\n * @public\r\n */\r\nconst getNetworkTypeZH = () => {\r\n    let types = {};\r\n    types[plus.networkinfo.CONNECTION_UNKNOW] = '网络连接状态未知';\r\n    types[plus.networkinfo.CONNECTION_NONE] = '未连接网络';\r\n    types[plus.networkinfo.CONNECTION_ETHERNET] = '有线网络';\r\n    types[plus.networkinfo.CONNECTION_WIFI] = 'WiFi网络';\r\n    types[plus.networkinfo.CONNECTION_CELL2G] = '2G网络';\r\n    types[plus.networkinfo.CONNECTION_CELL3G] = '3G网络';\r\n    types[plus.networkinfo.CONNECTION_CELL4G] = '4G网络';\r\n\r\n    return types[plus.networkinfo.getCurrentType()];\r\n};\r\n\r\n/**\r\n * ajax方法的封装\r\n * @param {object} options 配置的参数\r\n * @public\r\n */\r\nconst forwordError = (options) => {\r\n    options = options || {};\r\n    let url = pageUrl.PAGE_URL.error_connect.url;\r\n    let id = pageUrl.PAGE_URL.error_connect.id;\r\n    logger.log(id + 'forwordError:' + url, 'forwordError()');\r\n    mui.openWindow(url, id, {});\r\n};\r\n\r\n/**\n * ajax方法的封装,增加一个参数，如果不需要进行加载动画时，需要显示设置为false\n * options.loading = false;默认值是true\n * @param {string} url 要打开的页面地址\n * @param {string} options 配置的参数，具体的参数配置同mui的ajax参数\n * @public\n */\nconst muiAjax = (url, options) => {\n    if (options.loading === undefined) {\n        options.loading = true;\n    }\n    logger.log('url:' + url + ' options:' + utils.stringify(options));\n  //  mui.ajaxSettings.beforeSend = ajaxBeforeSend;\n    mui.ajaxSettings.inspect = ajaxInspect;\n    mui.ajaxSettings.success = ajaxSuccess;\n    mui.ajaxSettings.error = ajaxError;\n    mui.ajaxSettings.complete = ajaxComplete;\n  /**\n   * ajax超时时间设置为10秒\n   */\n    mui.ajaxSettings.timeout = 10000;\n    if (ajaxBeforeSend(options, url) === false) {\n        logger.log('ajaxBeforeSend has return false', 'muiAjax ajaxBeforeSend');\n    //      options.error();\n        return false;\n    }\r\n    mui.ajax(url, options);\n};\n\n/**\n * 带回调函数的登录验证方法\n * @param  {Function} cb 回调函数，登录成功之后调用，用来处理登录之后的后续逻辑\n * @param  {Object} opt   回调参数\n * @return {void}           无返回\n */\nconst loginValid = (cb, opt) => {\n    let accessToken = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.LOGIN_ACCESS_TOKEN);\n    if (accessToken === undefined || accessToken == null || accessToken === '' || accessToken === 'null') {\n    // 未登录，打开登录页面\n        let ops = {\n            styles: {\n                popGesture: 'close',\n                softinputMode: 'adjustResize'\n            },\n            show: {\n                autoShow: true,\n                aniShow: 'pop-in',\n                duration: 300\n            },\n            waiting: {\n                autoShow: false // 自动显示等待框，默认为true\n            },\n            createNew: false\n        };\n        if (cb !== undefined && typeof cb === 'function') {\n      // 开启监听，等待登录完成\n            window.addEventListener(CONSTS.LOGIN_COMPUTER_EVENT, e => {\n                logger.log(CONSTS.LOGIN_COMPUTER_EVENT, 'loginValidHasCb');\n        // 确保callback是一个函数\n                if (typeof cb === 'function') {\n                    cb(opt);\n                } else {\n                    logger.log('cbSuccess must be function!');\n                }\n            });\n        }\n        mui.openWindow(pageUrl.PAGE_URL.login_index.url, pageUrl.PAGE_URL.login_index.id, ops);\r\n        return false;\n    } else {\n        if (cb !== undefined && typeof cb === 'function') {\n            cb(opt);\n        }\n        return true;\n    }\n};\n\n/**\n * 开始,return false 就会终止ajax请求\n * 1.判断网络状态\n * 2.set头部信息\n * @param {XMLHttpRequest} xhr XMLHttpRequest对象\n * @param {Object} setting 参数\n * @private\n */\nconst ajaxBeforeSend = (options, url) => {\n  //  logger.log('ajaxBeforeSend', 'muiUtils.js');\n  //  if (getNetworkType() === 1) {\n  //      forwordError();\n  //      return false;\n  //  }\n  // 设置头部认证信息\n    options.headers = options.headers || {};\n    let token = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.LOGIN_ACCESS_TOKEN);\n    let instanceId = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.APP_INSTANCE_ID);\n    if (instanceId === undefined || instanceId == null || instanceId === '' || instanceId === 'null') {\n        instanceId = utils.uuidV4();\n        cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).set(CONSTS.APP_INSTANCE_ID, instanceId);\n    }\n\n    options.headers.instance_id = instanceId;\n    options.headers.access_token = (token === 'null' || token == null) ? '' : token;\n    options.headers.reqStartTime = new Date().getTime(); // 请求开始时间\n    options.headers.url = url; // 打印而已\n  // 开启加载动画\n    if (options.loading === true) {\n        let w = plus.nativeUI.showWaiting('处理中...');\n        options.nativeUI = w;\n    }\n};\n\n/**\n * 拦截器，拦截ajax回调，处理权限等\n * @param {Object} data api给的结果\n * @param {String} xhr  XMLHttpRequest对象\n * @param {XMLHttpRequest} setting  传入的参数对象\n * @private\n */\nconst ajaxInspect = (data, xhr, setting) => {\r\n  //  logger.log(JSON.stringify(setting.inspecterror) + 'require data before deal:' + JSON.stringify(data), 'inspecttype' + setting.inspecttype);\r\n  // 关闭加载动画\r\n    if (setting.nativeUI !== undefined) {\n        setting.nativeUI.close();\n    }\n    let reqTime = new Date().getTime() - setting.headers.reqStartTime;\n    logger.log('url:' + setting.url);\n    logger.log('ajaxInspect reqTime:' + reqTime, 'ajaxInspect()');\r\n    if (data === 'error') { // 异常处理\n        logger.log('errorType:' + setting.inspecttype, 'error');\r\n        logger.log('error:' + setting.inspecterror, 'error');\r\n    } else { // 正常处理\r\n    // 将API返回的data数据处理成统一格式\r\n        let tempData = data.result_data || {};\r\n        data.header = {\r\n            code: data.error_code + '',\r\n            msg: data.error_message\r\n        };\r\n        Object.keys(tempData).map(item => {\r\n            data[item] = tempData[item];\r\n        });\r\n        delete data.error_code;\r\n        delete data.error_message;\r\n        delete data.error_data;\r\n        delete data.result_data;\r\n        logger.log('require data after deal:' + JSON.stringify(data));\r\n    // 当在函数体内使用赋值操作时，系统就创建了一个变量名为data的变量。这个data是函数内部的变量，对它进行赋值当然只在函数体内起作用，外面的data还是原来的data,对对象进行修改就会反映到外部data上，因为对象和数组都是传递的引用\r\n    // data = tempData;\r\n        if (data.header !== undefined && data.header.code === CONSTS.ERROR_CODE.INSUFFICIENT_PERMISSIONS) {\n            logger.log('权限不足', 'ajaxInspect');\n            if (loginValid() === false) {\n                setting.error();\n                return false;\n            }\n        }\n        let instanceId = xhr.getResponseHeader(CONSTS.APP_INSTANCE_ID);\n        if (instanceId === cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.APP_INSTANCE_ID)) {\n            logger.log(\"it's my require!!!!\", 'valid instanceId is ok');\n        } else {\n            logger.log('it is not  my require!!!!,the token is no safe,please login again and change password,' + instanceId, 'valid instanceId is nok');\n    // 测试阶段，直接忽略，上线了可以开启\n    // return false;\n        }\n    // 更新token\n        let token = xhr.getResponseHeader(CONSTS.LOGIN_ACCESS_TOKEN) || cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.LOGIN_ACCESS_TOKEN);\n    // logger.log(token, 'CONSTS.LOGIN_ACCESS_TOKEN ajaxInspect');\n        cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).set(CONSTS.LOGIN_ACCESS_TOKEN, token);\n    }\n  // 返回true就是放过，false就拦截后面的请求，目前拦截了error和sucess\n    return true;\n};\n\n/**\n * 成功\n * @param {Object} data api给的结果\n * @param {String} xhr  XMLHttpRequest对象\n * @param {XMLHttpRequest} setting  传入的参数对象\n * @private\n */\nconst ajaxSuccess = (data, xhr, setting) => {\n    logger.log('ajaxSuccess' + data, 'muiUtils.js');\n};\n\n/**\n * 出错\n * @private\n */\nconst ajaxError = (error, type, xhr, setting) => {\n    logger.log('ajaxError' + error + type, 'muiUtils.js');\n};\n\n/**\n * 结束\n * @private\n */\nconst ajaxComplete = (status, xhr, setting) => {\n    let reqTime = new Date().getTime() - setting.headers.reqStartTime;\n  //  logger.log('ajaxComplete reqStartTime:' + setting.headers.reqStartTime + 'reqEndTime:' + new Date().getTime(), 'ajaxComplete()');\n    logger.log('ajaxComplete reqTime:' + reqTime, 'ajaxComplete()');\n//  logger.log('ajaxComplete', 'ajaxComplete()');\n};\n\n/**\n * 获取登录用户信息\n * @public\n * return 用户登录返回用户对象，用户未登录返回null\n */\nconst getLoginUserInfo = () => {\n    let accessToken = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).get(CONSTS.LOGIN_ACCESS_TOKEN);\n    if (accessToken === 'undefined' || accessToken == null || accessToken === '' || accessToken === 'null') {\n        return {};\n    } else {\n        let localStorage = cacheUtils.localStorage(CONSTS.PREFIX_LOGIN);\n        let userInfo = localStorage.getObject(CONSTS.USER_INFO);\n        return userInfo;\n    }\n};\n\n/**\n * 清空缓存，包括图片\n * @param {Boolean} onlyMemory true 仅仅清理内存数据，否则一并清理图片\n * @public\n */\nconst clearMemory = (onlyMemory) => {\n    let instanceId = window.localStorage.getItem(CONSTS.PREFIX_LOGIN + '_' + CONSTS.APP_INSTANCE_ID);\n    let accessToken = window.localStorage.getItem(CONSTS.PREFIX_LOGIN + '_' + CONSTS.LOGIN_ACCESS_TOKEN);\n    let userInfo = window.localStorage.getItem(CONSTS.PREFIX_LOGIN + '_' + CONSTS.USER_INFO);\n    window.localStorage.clear();\n    cacheUtils.cookie.clear();\n    window.sessionStorage.clear();\n    if (onlyMemory !== true) {\n        delAllFile();\n    }\n    cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).set(CONSTS.APP_INSTANCE_ID, instanceId === undefined ? '' : instanceId);\n    cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).set(CONSTS.LOGIN_ACCESS_TOKEN, accessToken === undefined ? '' : accessToken);\n    cacheUtils.localStorage(CONSTS.PREFIX_LOGIN).set(CONSTS.USER_INFO, userInfo === undefined ? '' : userInfo);\n//  window.localStorage.setItem(CONSTS.PREFIX_LOGIN + '_' + CONSTS.APP_INSTANCE_ID, instanceId === undefined ? '' : instanceId);\n//  window.localStorage.setItem(CONSTS.PREFIX_LOGIN + '_' + CONSTS.LOGIN_ACCESS_TOKEN, accessToken === undefined ? '' : accessToken);\n};\n\n/**\n * 输入框获取焦点被底部fix定位所遮盖,光标丢失,处于输入状态时跳转新的webview。\n * 输入键盘不消失,点击键盘中的完成时,键盘消失,但界面出现白屏。注意（此处没有加入横竖屏判断,只适用于手机竖屏）\n * @private\n */\nconst hideKeyBord = (url) => {\n    if(document.documentElement.clientHeight < plus.webview.currentWebview().pageOldH){\n    \tvar nativeWebview = plus.webview.currentWebview().nativeInstanceObject();\n    \tif (mui.os.android) {//安卓暂时没有发现此问题如果有请把它放开\n//          var main = plus.android.runtimeMainActivity();\n//          var Context = plus.android.importClass('android.content.Context');\n//          var InputMethodManager = plus.android.importClass('android.view.inputmethod.InputMethodManager');\n//          var imm = main.getSystemService(Context.INPUT_METHOD_SERVICE);\n//          plus.android.importClass(nativeWebview);\n//          nativeWebview.requestFocus();\n//          imm.toggleSoftInput(0, InputMethodManager.SHOW_FORCED);\n        } \n        if(mui.os.ios){\n        \tvar tagName = document.activeElement.tagName.toLowerCase();\n\t\t\tif(tagName=='input'||tagName=='textarea'){\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t\treturn;\n\t\t\t}\n    \t\tnativeWebview.plusCallMethod({\n                'setKeyboardDisplayRequiresUserAction': false\n            });\n            var input = document.createElement('input');\n\t    \tdocument.body.appendChild(input);\n\t        input.focus();\n\t\t\tinput.blur();\n\t\t\tdocument.body.removeChild(input);\n\t\t\tinput=null;\n        }\n    }\n};\n\nexport default {\n    openWindow,\n    openPreWindow,\n    openIndexWindow,\n    getNetworkType,\n    getNetworkTypeZH,\n    forwordError,\n    muiAjax,\n    loginValid,\n    getLoginUserInfo,\n    clearMemory,\n    closeAllOpenPage,\n    setStatusStyle,\r\n    setStatusStyleForPageId\n};\n"]}