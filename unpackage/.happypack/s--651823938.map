{"version":3,"sources":["src\\common\\image-utils.js"],"names":[],"mappings":"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","file":"image-utils.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/jxddH5PlusApp/unpackage","sourcesContent":["// const RALATIVE_PATH = '_downloads/';\r\nimport { RALATIVE_PATH, IMG_PLACEHOLD_PATH } from 'common/consts';\r\nimport logger from 'common/logUtils';\r\n// eslint-disable-next-line\r\nconst asyncPath = async (imgUrl, dataName) => {\r\n  let relativePath = RALATIVE_PATH + dataName + '_' + imgUrl.split('/').pop();\r\n  let locaPath = await resolveLocalFileSystemURL(relativePath);\n  console.log('locaPath:::' + locaPath);\n  if (locaPath === undefined) {\r\n    locaPath = await getImgFromNet(imgUrl, relativePath);\r\n  }\r\n  return locaPath;\r\n};\r\n\r\n/**\r\n * 获取图片本地文件\r\n * @param  {String}   imgUrl   图片url\r\n * @param  {Number}   index    数组索引\r\n * @param  {String}   dataName 数组对象名称，对应data里面的定义，可以直接使用self[dataName] 获取定义的数组\r\n * @param  {Function} cb       回调函数，更新数组对象用的\r\n * @return {String}            图片的本地绝对路径\r\n * @public\r\n */\r\nconst getImageLocalPath = (imgUrl, index, dataName, cb) => {\r\n  let reg = /\\.(png|jpe?g|gif|svg)(\\?.*)?$/;\r\n  if (imgUrl === undefined || imgUrl == null || imgUrl.indexOf('/') === -1 || !reg.test(imgUrl)) {\r\n    cb(IMG_PLACEHOLD_PATH, index, dataName);\r\n    return;\r\n  }\r\n  asyncPath(imgUrl, dataName).then(value => {\r\n    cb(value, index, dataName);\r\n  }).catch((err) => {\r\n    logger.log('err:' + err.stack, 'getImageLocalPath asyncPath() error');\r\n  });\r\n};\r\n\r\n/**\r\n * 根据path路径，访问本地文件系统，如果文件存在就返回绝对路径，否则抛出异常\r\n * @type {String} 文件的绝对路径\r\n * @private\r\n */\r\nconst resolveLocalFileSystemURL = path => {\r\n  return new Promise((resolve, reject) => {\r\n    plus.io.resolveLocalFileSystemURL(path, function(entry) {\r\n      resolve(plus.io.convertLocalFileSystemURL(path));\r\n    }, function(e) {\r\n      reject(e);\r\n    });\r\n  }).catch((err) => {\r\n    logger.log(path + 'resolveLocalFileSystemURL fail:' + err.stack, 'resolveLocalFileSystemURL() error');\r\n  });\r\n};\r\n\r\n/**\r\n * 通过网络下载图片文件，当然也可以下载其他的静态资源文件\r\n * @param  {String} url  网络url\r\n * @param  {String} path 下载之后的本地路径\r\n * @return {String}      本地路径\r\n */\r\nconst getImgFromNet = (url, path) => {\r\n  return new Promise((resolve, reject) => {\r\n    plus.downloader.createDownload(url, {\r\n      timeout: 5,\r\n      retry: 0,\r\n      filename: path\r\n    //   ,retryInterval:3\r\n    }, function(d, status) {\r\n      if (status === 200) {\r\n        // console.log('createDownload:' + plus.io.convertLocalFileSystemURL(path));\r\n        resolve(plus.io.convertLocalFileSystemURL(path));\r\n      } else {\r\n        logger.log('download fail!' + path, 'getImgFromNet() error');\r\n        reject(path);\r\n      }\r\n    }).start();\r\n  }).catch(path => {\r\n    delFile(path);\r\n  });\r\n};\r\n\r\n/**\r\n * 删除文件\r\n * @type {String} 文件路径\r\n */\r\nconst delFile = relativePath => {\r\n  plus.io.resolveLocalFileSystemURL(relativePath, function(entry) {\r\n    entry.remove(function(entry) {\r\n      logger.log('delFile sucess==' + relativePath, 'delFile() error');\r\n    }, function(e) {\r\n      logger.log('delFile fail==' + relativePath, 'delFile() error');\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 删除_downloads下面的全部文件\r\n * @return void\r\n */\r\nconst delAllFile = () => {\r\n  plus.io.resolveLocalFileSystemURL(RALATIVE_PATH, function(entry) {\r\n    entry.removeRecursively(function(entry) {\r\n      logger.log('delAllFile sucess==' + RALATIVE_PATH, 'delAllFile() error');\r\n    }, function(e) {\r\n      logger.log('delAllFile fail==' + RALATIVE_PATH, 'delAllFile() error');\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 获取要删除文件的大小\r\n * @type {Function}  func回调函数\r\n * @return {Number} 图片大小\r\n */\r\nconst getFileSize = func => {\r\n  // let rootPath = '_downloads';\r\n  plus.io.resolveLocalFileSystemURL(RALATIVE_PATH, function(entry) {\r\n    entry.getMetadata(function(metadata) {\r\n      func(metadata.size);\r\n    }, function(e) {\r\n      logger.log(e.message, 'getFileSize() error');\r\n    }, false);\r\n  });\r\n}\r\n\r\nexport default {\r\n  delAllFile,\r\n  getFileSize,\r\n  getImageLocalPath\n};\r\nexport { delAllFile, getFileSize, getImageLocalPath }\r\n"]}