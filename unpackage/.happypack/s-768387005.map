{"version":3,"sources":["src\\common\\dateFormat.js"],"names":["ISO8601_FORMAT","ISO8601_WITH_TZ_OFFSET_FORMAT","DATETIME_FORMAT","ABSOLUTETIME_FORMAT","padWithZeros","vNumber","width","numAsString","length","addZero","offset","timezoneOffset","os","Math","abs","h","String","floor","m","dateFormat","date","format","Date","arguments","undefined","getTimezoneOffset","setUTCMinutes","getUTCMinutes","vDay","getUTCDate","vMonth","getUTCMonth","vYearLong","getUTCFullYear","vYearShort","toString","substring","vYear","indexOf","vHour","getUTCHours","vMinute","vSecond","getUTCSeconds","vMillisecond","getUTCMilliseconds","vTimeZone","formatted","replace","diffTime","nowTime","getTime","secondTime","minuteTime","hourTime","dayTime","monthTime","yearTime","publishTime","item","historyTime","parseInt","descTime"],"mappings":"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","file":"dateFormat.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/appTemplate/unpackage","sourcesContent":["'use strict';\n/*!\n * dateFormat.js v1.0.0\n * 日期格式化工具类\n *\n * Author: liaoxm\n * Date: 2016-06-16\n *\n */\nconst ISO8601_FORMAT = 'yyyy-MM-dd hh:mm:ss.SSS';\nconst ISO8601_WITH_TZ_OFFSET_FORMAT = 'yyyy-MM-ddThh:mm:ssO';\nconst DATETIME_FORMAT = 'dd MM yyyy hh:mm:ss.SSS';\nconst ABSOLUTETIME_FORMAT = 'hh:mm:ss.SSS';\n\n/**\n * 补0\n * @private\n */\nfunction padWithZeros(vNumber, width) {\n    var numAsString = vNumber + '';\n    while (numAsString.length < width) {\n        numAsString = '0' + numAsString;\n    }\n    return numAsString;\n}\n/**\n * 补0\n * @private\n */\nfunction addZero(vNumber) {\n    return padWithZeros(vNumber, 2);\n}\n\n/**\n * 时区\n * @private\n */\nfunction offset(timezoneOffset) {\n    // Difference to Greenwich time (GMT) in hours\n    var os = Math.abs(timezoneOffset);\n    var h = String(Math.floor(os / 60));\n    var m = String(os % 60);\n    if (h.length === 1) {\n        h = '0' + h;\n    }\n    if (m.length === 1) {\n        m = '0' + m;\n    }\n    return timezoneOffset < 0 ? '+' + h + m : '-' + h + m;\n}\n/**\n * 时间格式化\n * @param {Date|String|timestamp}  date 需要格式化的对象\n * @public\n */\nconst dateFormat = function(date, format, timezoneOffset) {\n    if (typeof (date) === 'string' || typeof (date) === 'number') {\n        date = new Date(arguments[0]);\n        format = arguments[1];\n        timezoneOffset = arguments[2];\n    }\n    if (format === undefined) {\n        format = ISO8601_FORMAT;\n    }\n    if (timezoneOffset === undefined) {\n        timezoneOffset = date.getTimezoneOffset();\n    }\n    date.setUTCMinutes(date.getUTCMinutes() - timezoneOffset);\n    var vDay = addZero(date.getUTCDate());\n    var vMonth = addZero(date.getUTCMonth() + 1);\n    var vYearLong = addZero(date.getUTCFullYear());\n    var vYearShort = addZero(date.getUTCFullYear().toString().substring(2, 4));\n    var vYear = (format.indexOf('yyyy') > -1 ? vYearLong : vYearShort);\n    var vHour = addZero(date.getUTCHours());\n    var vMinute = addZero(date.getUTCMinutes());\n    var vSecond = addZero(date.getUTCSeconds());\n    var vMillisecond = padWithZeros(date.getUTCMilliseconds(), 3);\n    var vTimeZone = offset(timezoneOffset);\n    date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);\n    var formatted = format\n        .replace(/dd/g, vDay)\n        .replace(/MM/g, vMonth)\n        .replace(/y{1,4}/g, vYear)\n        .replace(/hh/g, vHour)\n        .replace(/mm/g, vMinute)\n        .replace(/ss/g, vSecond)\n        .replace(/SSS/g, vMillisecond)\n        .replace(/O/g, vTimeZone);\n    return formatted;\n};\n\n/**\n * 格式化时间与当前时间差\n * @param {String} item 一个由逗号连接的包含一个或多个CSS选择器的字符串\n * @return {NodeList} 一个non-live的 NodeList 类型的对象\n * @public\n */\nconst diffTime = item => {\n    var nowTime = new Date().getTime();\n    var secondTime = 1000;\n    var minuteTime = 60 * 1000;\n    var hourTime = 60 * minuteTime;\n    var dayTime = 24 * hourTime;\n    var monthTime = dayTime * 30;\n    var yearTime = monthTime * 12;\n\n    var publishTime = new Date(item).getTime();\n    var historyTime = parseInt(nowTime) - parseInt(publishTime);\n    var descTime;\n    if (historyTime >= yearTime) {\n        // 按年算\n        descTime = parseInt(historyTime / yearTime) + '年前';\n    } else if (historyTime < yearTime && historyTime >= monthTime) {\n        // 按月算\n        descTime = parseInt(historyTime / monthTime) + '月前';\n    } else if (historyTime < monthTime && historyTime >= dayTime) {\n        // 按天算\n        descTime = parseInt(historyTime / dayTime) + '天前';\n    } else if (historyTime < dayTime && historyTime >= hourTime) {\n        // 按小时算\n        descTime = parseInt(historyTime / hourTime) + '小时前';\n    } else if (historyTime < hourTime && historyTime >= minuteTime) {\n        // 按分钟算\n        descTime = parseInt(historyTime / minuteTime) + '分钟前';\n    } else {\n        descTime = parseInt(historyTime / secondTime) + '秒前'; ;\n    }\n    return descTime;\n};\n\nexport default {\n    diffTime,\n    dateFormat,\n    ISO8601_FORMAT,\n    ISO8601_WITH_TZ_OFFSET_FORMAT,\n    DATETIME_FORMAT,\n    ABSOLUTETIME_FORMAT\n};\n"]}