{"version":3,"sources":["src\\common\\dateFormat.js"],"names":[],"mappings":"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","file":"dateFormat.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/jxddH5PlusApp/unpackage","sourcesContent":["'use strict';\n/*!\n * dateFormat.js v1.0.0\n * 日期格式化工具类\n *\n * Author: liaoxm\n * Date: 2016-06-16\n *\n */\nconst ISO8601_FORMAT = 'yyyy-MM-dd hh:mm:ss.SSS';\nconst ISO8601_WITH_TZ_OFFSET_FORMAT = 'yyyy-MM-ddThh:mm:ssO';\nconst DATETIME_FORMAT = 'dd MM yyyy hh:mm:ss.SSS';\nconst ABSOLUTETIME_FORMAT = 'hh:mm:ss.SSS';\n\n/**\n * 补0\n * @private\n */\nfunction padWithZeros(vNumber, width) {\n    var numAsString = vNumber + '';\n    while (numAsString.length < width) {\n        numAsString = '0' + numAsString;\n    }\n    return numAsString;\n}\n/**\n * 补0\n * @private\n */\nfunction addZero(vNumber) {\n    return padWithZeros(vNumber, 2);\n}\n\n/**\n * 时区\n * @private\n */\nfunction offset(timezoneOffset) {\n    // Difference to Greenwich time (GMT) in hours\n    var os = Math.abs(timezoneOffset);\n    var h = String(Math.floor(os / 60));\n    var m = String(os % 60);\n    if (h.length === 1) {\n        h = '0' + h;\n    }\n    if (m.length === 1) {\n        m = '0' + m;\n    }\n    return timezoneOffset < 0 ? '+' + h + m : '-' + h + m;\n}\n/**\n * 时间格式化\n * @param {Date|String|timestamp}  date 需要格式化的对象\n * @public\n */\nconst dateFormat = function(date, format, timezoneOffset) {\n    if (typeof (date) === 'string' || typeof (date) === 'number') {\n        date = new Date(arguments[0]);\n        format = arguments[1];\n        timezoneOffset = arguments[2];\n    }\n    if (format === undefined) {\n        format = ISO8601_FORMAT;\n    }\n    if (timezoneOffset === undefined) {\n        timezoneOffset = date.getTimezoneOffset();\n    }\n    date.setUTCMinutes(date.getUTCMinutes() - timezoneOffset);\n    var vDay = addZero(date.getUTCDate());\n    var vMonth = addZero(date.getUTCMonth() + 1);\n    var vYearLong = addZero(date.getUTCFullYear());\n    var vYearShort = addZero(date.getUTCFullYear().toString().substring(2, 4));\n    var vYear = (format.indexOf('yyyy') > -1 ? vYearLong : vYearShort);\n    var vHour = addZero(date.getUTCHours());\n    var vMinute = addZero(date.getUTCMinutes());\n    var vSecond = addZero(date.getUTCSeconds());\n    var vMillisecond = padWithZeros(date.getUTCMilliseconds(), 3);\n    var vTimeZone = offset(timezoneOffset);\n    date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);\n    var formatted = format\n        .replace(/dd/g, vDay)\n        .replace(/MM/g, vMonth)\n        .replace(/y{1,4}/g, vYear)\n        .replace(/hh/g, vHour)\n        .replace(/mm/g, vMinute)\n        .replace(/ss/g, vSecond)\n        .replace(/SSS/g, vMillisecond)\n        .replace(/O/g, vTimeZone);\n    return formatted;\n};\n\n/**\n * 格式化时间与当前时间差\n * @param {String} item 一个由逗号连接的包含一个或多个CSS选择器的字符串\n * @return {NodeList} 一个non-live的 NodeList 类型的对象\n * @public\n */\nconst diffTime = item => {\n    var nowTime = new Date().getTime();\n    var secondTime = 1000;\n    var minuteTime = 60 * 1000;\n    var hourTime = 60 * minuteTime;\n    var dayTime = 24 * hourTime;\n    var monthTime = dayTime * 30;\n    var yearTime = monthTime * 12;\n\n    var publishTime = new Date(item).getTime();\n    var historyTime = parseInt(nowTime) - parseInt(publishTime);\n    var descTime;\n    if (historyTime >= yearTime) {\n        // 按年算\n        descTime = parseInt(historyTime / yearTime) + '年前';\n    } else if (historyTime < yearTime && historyTime >= monthTime) {\n        // 按月算\n        descTime = parseInt(historyTime / monthTime) + '月前';\n    } else if (historyTime < monthTime && historyTime >= dayTime) {\n        // 按天算\n        descTime = parseInt(historyTime / dayTime) + '天前';\n    } else if (historyTime < dayTime && historyTime >= hourTime) {\n        // 按小时算\n        descTime = parseInt(historyTime / hourTime) + '小时前';\n    } else if (historyTime < hourTime && historyTime >= minuteTime) {\n        // 按分钟算\n        descTime = parseInt(historyTime / minuteTime) + '分钟前';\n    } else {\n        descTime = parseInt(historyTime / secondTime) + '秒前'; ;\n    }\n    return descTime;\n};\n\nexport default {\n    diffTime,\n    dateFormat,\n    ISO8601_FORMAT,\n    ISO8601_WITH_TZ_OFFSET_FORMAT,\n    DATETIME_FORMAT,\n    ABSOLUTETIME_FORMAT\n};\n"]}