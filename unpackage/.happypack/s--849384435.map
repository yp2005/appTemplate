{"version":3,"sources":["src\\common\\image-utils.js"],"names":["asyncPath","imgUrl","dataName","relativePath","split","pop","resolveLocalFileSystemURL","locaPath","console","log","undefined","getImgFromNet","getImageLocalPath","index","cb","reg","indexOf","test","then","value","catch","err","stack","resolve","reject","plus","io","path","entry","convertLocalFileSystemURL","e","url","downloader","createDownload","timeout","retry","filename","d","status","start","delFile","remove","delAllFile","removeRecursively","getFileSize","getMetadata","metadata","func","size","message"],"mappings":"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","file":"image-utils.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/appTemplate/unpackage","sourcesContent":["// const RALATIVE_PATH = '_downloads/';\r\nimport { RALATIVE_PATH, IMG_PLACEHOLD_PATH } from 'common/consts';\r\nimport logger from 'common/logUtils';\r\n// eslint-disable-next-line\r\nconst asyncPath = async (imgUrl, dataName) => {\r\n  let relativePath = RALATIVE_PATH + dataName + '_' + imgUrl.split('/').pop();\r\n  let locaPath = await resolveLocalFileSystemURL(relativePath);\n  console.log('locaPath:::' + locaPath);\n  if (locaPath === undefined) {\r\n    locaPath = await getImgFromNet(imgUrl, relativePath);\r\n  }\r\n  return locaPath;\r\n};\r\n\r\n/**\r\n * 获取图片本地文件\r\n * @param  {String}   imgUrl   图片url\r\n * @param  {Number}   index    数组索引\r\n * @param  {String}   dataName 数组对象名称，对应data里面的定义，可以直接使用self[dataName] 获取定义的数组\r\n * @param  {Function} cb       回调函数，更新数组对象用的\r\n * @return {String}            图片的本地绝对路径\r\n * @public\r\n */\r\nconst getImageLocalPath = (imgUrl, index, dataName, cb) => {\r\n  let reg = /\\.(png|jpe?g|gif|svg)(\\?.*)?$/;\r\n  if (imgUrl === undefined || imgUrl == null || imgUrl.indexOf('/') === -1 || !reg.test(imgUrl)) {\r\n    cb(IMG_PLACEHOLD_PATH, index, dataName);\r\n    return;\r\n  }\r\n  asyncPath(imgUrl, dataName).then(value => {\r\n    cb(value, index, dataName);\r\n  }).catch((err) => {\r\n    logger.log('err:' + err.stack, 'getImageLocalPath asyncPath() error');\r\n  });\r\n};\r\n\r\n/**\r\n * 根据path路径，访问本地文件系统，如果文件存在就返回绝对路径，否则抛出异常\r\n * @type {String} 文件的绝对路径\r\n * @private\r\n */\r\nconst resolveLocalFileSystemURL = path => {\r\n  return new Promise((resolve, reject) => {\r\n    plus.io.resolveLocalFileSystemURL(path, function(entry) {\r\n      resolve(plus.io.convertLocalFileSystemURL(path));\r\n    }, function(e) {\r\n      reject(e);\r\n    });\r\n  }).catch((err) => {\r\n    logger.log(path + 'resolveLocalFileSystemURL fail:' + err.stack, 'resolveLocalFileSystemURL() error');\r\n  });\r\n};\r\n\r\n/**\r\n * 通过网络下载图片文件，当然也可以下载其他的静态资源文件\r\n * @param  {String} url  网络url\r\n * @param  {String} path 下载之后的本地路径\r\n * @return {String}      本地路径\r\n */\r\nconst getImgFromNet = (url, path) => {\r\n  return new Promise((resolve, reject) => {\r\n    plus.downloader.createDownload(url, {\r\n      timeout: 5,\r\n      retry: 0,\r\n      filename: path\r\n    //   ,retryInterval:3\r\n    }, function(d, status) {\r\n      if (status === 200) {\r\n        // console.log('createDownload:' + plus.io.convertLocalFileSystemURL(path));\r\n        resolve(plus.io.convertLocalFileSystemURL(path));\r\n      } else {\r\n        logger.log('download fail!' + path, 'getImgFromNet() error');\r\n        reject(path);\r\n      }\r\n    }).start();\r\n  }).catch(path => {\r\n    delFile(path);\r\n  });\r\n};\r\n\r\n/**\r\n * 删除文件\r\n * @type {String} 文件路径\r\n */\r\nconst delFile = relativePath => {\r\n  plus.io.resolveLocalFileSystemURL(relativePath, function(entry) {\r\n    entry.remove(function(entry) {\r\n      logger.log('delFile sucess==' + relativePath, 'delFile() error');\r\n    }, function(e) {\r\n      logger.log('delFile fail==' + relativePath, 'delFile() error');\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 删除_downloads下面的全部文件\r\n * @return void\r\n */\r\nconst delAllFile = () => {\r\n  plus.io.resolveLocalFileSystemURL(RALATIVE_PATH, function(entry) {\r\n    entry.removeRecursively(function(entry) {\r\n      logger.log('delAllFile sucess==' + RALATIVE_PATH, 'delAllFile() error');\r\n    }, function(e) {\r\n      logger.log('delAllFile fail==' + RALATIVE_PATH, 'delAllFile() error');\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 获取要删除文件的大小\r\n * @type {Function}  func回调函数\r\n * @return {Number} 图片大小\r\n */\r\nconst getFileSize = func => {\r\n  // let rootPath = '_downloads';\r\n  plus.io.resolveLocalFileSystemURL(RALATIVE_PATH, function(entry) {\r\n    entry.getMetadata(function(metadata) {\r\n      func(metadata.size);\r\n    }, function(e) {\r\n      logger.log(e.message, 'getFileSize() error');\r\n    }, false);\r\n  });\r\n}\r\n\r\nexport default {\r\n  delAllFile,\r\n  getFileSize,\r\n  getImageLocalPath\n};\r\nexport { delAllFile, getFileSize, getImageLocalPath }\r\n"]}