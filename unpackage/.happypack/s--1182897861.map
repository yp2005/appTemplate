{"version":3,"sources":["src\\filter\\commonFilter.js"],"names":[],"mappings":";;;;;AAWO,IAAM,8BAAW,SAAX,QAAW,CAAC,KAAD,EAAQ,GAAR,EAAgB;AACpC,QAAI,CAAC,KAAL,EAAY;AACR,eAAO,EAAP;AACH;AACD,QAAI,MAAM,MAAN,GAAe,GAAnB,EAAwB;AACpB,eAAO,MAAM,MAAN,CAAa,CAAb,EAAgB,GAAhB,CAAP;AACH,KAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,CATM;;AAiBA,IAAM,4CAAkB,SAAlB,eAAkB,GAA4B;AAAA,QAA3B,KAA2B,yDAAnB,EAAmB;AAAA,QAAf,IAAe,yDAAR,GAAQ;;AACvD,QAAI,MAAM,+BAAV;AACA,QAAI,MAAM,OAAN,CAAc,OAAd,MAA2B,CAA3B,IAAgC,CAAC,IAAI,IAAJ,CAAS,KAAT,CAArC,EAAsD;AAClD,YAAI,SAAS,MAAM,SAAN,CAAgB,MAAM,WAAN,CAAkB,GAAlB,CAAhB,CAAb;AACA,eAAU,KAAV,SAAmB,OAAO,CAA1B,GAA8B,MAA9B;AACH;AACD,WAAO,KAAP;AACH,CAPM;;AAeA,IAAM,sDAAuB,SAAvB,oBAAuB,GAA4B;AAAA,QAA3B,KAA2B,yDAAnB,EAAmB;AAAA,QAAf,IAAe,yDAAR,GAAQ;;AAC5D,QAAI,MAAM,+BAAV;AACA,QAAI,MAAM,OAAN,CAAc,OAAd,MAA2B,CAA3B,IAAgC,CAAC,IAAI,IAAJ,CAAS,KAAT,CAArC,EAAsD;AAClD,YAAI,SAAS,MAAM,SAAN,CAAgB,MAAM,WAAN,CAAkB,GAAlB,CAAhB,CAAb;AACA,eAAU,KAAV,SAAmB,IAAnB,GAA0B,MAA1B;AACH;AACD,WAAO,KAAP;AACH,CAPM","file":"commonFilter.js","sourceRoot":"C:/Users/dell/AppData/Roaming/HBuilder/userprofiles/18710095921@163.com/jxddH5PlusApp/unpackage","sourcesContent":["/**\r\n * @file 通用过滤\r\n *\n * @Author zhongzhian\r\n *\n */\r\n\r\n/**\r\n * 首页显示的行业的二级分类限定字数\r\n * num为需要限定的字数\r\n */\r\nexport const mysubstr = (value, num) => {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n    if (value.length > num) {\r\n        return value.substr(0, num);\r\n    } else {\r\n        return value;\r\n    }\r\n};\r\n\n/**\n * 图片压缩过滤器，在传入的尺寸上×2\n * @param  {[type]} value =             ''  [图片路径]\n * @param  {[type]} size  =             100 [图片尺寸]\n * @return {[type]}       [压缩或者不压缩的图片路径]\n */\nexport const imageSizeFilter = (value = '', size = 100) => {\n    let reg = /_\\d{0,3}.(png|jpe?g|gif|svg)$/; // 避免重复处理导致路径不正确\n    if (value.indexOf('http:') === 0 && !reg.test(value)) {\n        let suffix = value.substring(value.lastIndexOf('.'));\r\n        return `${value}_${size * 2}${suffix}`;\n    }\r\n    return value;\r\n};\n\n/**\n * 图片压缩过滤器，首页专用\n * @param  {[type]} value =             ''  [图片路径]\n * @param  {[type]} size  =             100 [图片尺寸]\n * @return {[type]}       [压缩或者不压缩的图片路径]\n */\nexport const imageSizeFilter4Home = (value = '', size = 360) => {\n    let reg = /_\\d{0,3}.(png|jpe?g|gif|svg)$/; // 避免重复处理导致路径不正确\n    if (value.indexOf('http:') === 0 && !reg.test(value)) {\n        let suffix = value.substring(value.lastIndexOf('.'));\n        return `${value}_${size}${suffix}`;\n    }\n    return value;\n};\n"]}